% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/series_cleaner.R
\name{series_cleaner}
\alias{series_cleaner}
\title{ConFluxPro}
\usage{
series_cleaner(df, mode = "data")
}
\arguments{
\item{df}{(dataframe)}

\item{mode}{(character) "data" returns the corrected dataset. "plots" returns before / after plots.}
}
\value{
dataframe
}
\description{
This function corrects time series of gas concentrations within a certain depth at one site.
The basic assumption is that gas data of different samplers within a depth are strictly ordered due to spatial
heterogeneity or differences in the exact installation depth, i.e. always one sampler shows the highest
concentration, so that the difference of each sampler on each day to the respective mean
of all samplers is more or less the same.

This function does not apply if your data either has only one observation per depth or if
your data does not show any intrinsic ordering inside each depth. Check these preconditions first.

The function outputs a dataframe that has the same structure as the input, so that the original input can be removed.
The function can be used using dplyr group_modify()-function
}
\examples{
co2_clean<-gasdata \%>\%
dplyr::filter(gas == "CO2") \%>\%
dplyr::group_by(Plot,depth_cat) \%>\%
dplyr::group_modify(~series.cleaner(.x))

gasdata<-gasdata \%>\%
dplyr::filter(!gas == "CO2") \%>\%
dplyr::bind_rows(co2_clean)

\%Exactly the same but editing data directly
gasdata <- gasdata \%>\% gasdata \%>\%
dplyr::group_by(Plot,depth_cat,gas) \%>\%
dplyr::group_modify(~{
           if(.y$gas == "CO2"){
               df <- series.cleaner(.x)
           } else {
               df <- .x}
           return(df)
                      })

}
