% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prod_optim.R
\name{prod_optim}
\alias{prod_optim}
\title{prod_optim}
\usage{
prod_optim(
  X,
  height,
  DS,
  lower_boundry_ref,
  c_air,
  pmap,
  cmap,
  profile_ref,
  dstor = 0,
  zero_flux = TRUE,
  F0 = 0,
  layer_couple,
  wmap,
  evenness_factor,
  fit_to
)
}
\arguments{
\item{X}{(numeric vector) specifying the production rates to be optimized}

\item{height}{(numeric vector) giving the height of each step}

\item{DS}{(numeric vector) giving the DS of each step}

\item{lower_boundry_ref}{(numeric) The concentration or molar fraction at the
bottom of the lowermost step.}

\item{c_air}{Molar density of air.}

\item{pmap}{(integer vector) assigning a production from X to each step}

\item{cmap}{(integer vector) assigning the modeled concentrations to the
observed concentrations as there can be multiple observations per depth}

\item{profile_ref}{(numeric) the observed concentrations or molar fractions
(in the same unit as the modelled concentrations).}

\item{zero_flux}{(logical) Applies the zero-flux boundary condition? If
\code{FALSE}, \code{F0} is optimized alongside the production rates.}

\item{F0}{(numeric) flux into lowest layer.}

\item{layer_couple}{(numeric vector) A vector defining the weights that bind
the different layers together. If all is zero, no penalisation for stark
differences between the optimized production rates of adjacent layers takes
place}

\item{wmap}{(numeric) A vector defining the weights of the different
concentration measurements in the RMSE calculation.
#'}

\item{evenness_factor}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}(numeric) A user
defined factor used to penalise strong differences between the optimised
production rates. This must be identified by trial-and-error and can help
prevent that production rates are simply set to zero basically the lower a
production is relative to the the maximum of the absolute of all
productions, the higher it is penalised. The \code{evenness_factor} then
defines the weight of this penalty in the optimisation algorithm
\code{\link{prod_optim}}.}

\item{fit_to}{(character) Either\code{"concentration"} or
\code{"molar_fraction"}. Should the profile be fitted to measured
concentration \eqn{[Âµmol~m^{-3}]} or molar fraction [\eqn{ppm}]? Makes only little
differences for trace gases but is important for gases with a high molar
fraction (\eqn{O_2} and \eqn{N_2}), where molar fraction should be used. Default is
\code{"concentration"}}
}
\value{
A modified RMSE root mean square error of the modeled and measured
concentration.
}
\description{
This is the optimizer-function that is
minimized for the inverse, production based model.
It takes as input a vector of the influx, as well as the
values of the production to be optimized.

This function is embedded in \code{\link[=pro_flux]{pro_flux()}} and is not intended to be
used manually.
}
\examples{
\donttest{
prod_optim(c(1,1,1),
 c(0.1,0.1,0.1),
 DS = D0_massman("CO2", 10, 1013),
 C0 = c(42*2000/1000/1000),
 conc = c(400, 1000, 2000)*42/1000/1000,
 wmap = 1,
 layer_couple = 1,
 evenness_factor = 1)
 }

}
\seealso{
Other proflux: 
\code{\link{prod_mod_conc}()}
}
\concept{proflux}
\keyword{internal}
